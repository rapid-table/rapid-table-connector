/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id("cl.franciscosolis.sonatype-central-upload") version "1.0.3"
}

group 'com.rapid-table.sdk'
version '1.6.0'

sourceCompatibility = '21'

repositories {
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation 'com.fasterxml.jackson.core:jackson-core:2.18.3'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.3'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.datatype/jackson-datatype-jsr310
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.3'
}

tasks.named('test') {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name.set(project.name)
                description.set("RapidTableConnector provides an SDK that allows easy CRUD operations using the Rest API provided by RapidTable.")
                url.set("https://github.com/rapid-table/rapid-table-connector")
                licenses {
                    license {
                        name.set("Apache License 2.0")
                        url.set("http://www.apache.org/licenses/LICENSE-2.0")
                        distribution.set("repo")
                    }
                }
                developers {
                    developer {
                        id.set("e-hirakawa")
                        name.set("Eiji Hirakawa")
                        email.set("eiji.hirakawa@rapid-table.com")
                    }
                }
                scm {
                    url.set("https://github.com/rapid-table/rapid-table-connector")
                }
            }
        }
    }
}

sonatypeCentralUpload {
    username = System.getenv("SONATYPE_CENTRAL_USERNAME")
    password = System.getenv("SONATYPE_CENTRAL_PASSWORD")

    archives = files(
            tasks.named("jar"),
            tasks.named("sourcesJar"),
            tasks.named("javadocJar")
    )
    def pomTask = tasks.named("generatePomFileForMavenJavaPublication").get()
    pom = pomTask.outputs.files.singleFile

    signingKey = System.getenv("PGP_SIGNING_KEY")
    signingKeyPassphrase = System.getenv("PGP_SIGNING_KEY_PASSPHRASE")
}

signing {
    useInMemoryPgpKeys(
            System.getenv("PGP_SIGNING_KEY"),
            System.getenv("PGP_SIGNING_KEY_PASSPHRASE")
    )
    sign publishing.publications.mavenJava
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
